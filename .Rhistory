erf(1)
pnorm(1)
dnorm(0)
1/(2*pi)
1/sqrt(2*pi)
1/(2*sqrt(pi))
sum(dnorm(s$nodes + 1)*x$weights)
sum(dnorm(x$nodes + 1)*x$weights)
sum(dnorm(x$nodes + 1)*x$weights)
sum(dnorm(x$nodes)*x$weights)
sum(dnorm(x$nodes - 1)*x$weights)
pnorm(1)
sum(dnorm(x$nodes + 1)*x$weights)
exp(1)
sum(dnorm(x$nodes + 1)*x$weights)*exp(1)
1-sum(dnorm(x$nodes + 1)*x$weights)*exp(1)
pnorm(1)
pnorm(0)
pnorm(0.5)
pnorm(1)-pnorm(-1)
?gauss.quad
x <- gauss.quad(20, "laguerre", alpha=1)
1-sum(dnorm(x$nodes + 1)*x$weights)*exp(1)
sum(dnorm(x$nodes + 1)*x$weights)*exp(1)
x <- gauss.quad(20, "laguerre", alpha=2)
sum(dnorm(x$nodes + 1)*x$weights)*exp(1)
x <- gauss.quad(20, "laguerre", alpha=1)
sum(dnorm(x$nodes + 1)*x$weights)*exp(1)
f <- function(t) exp(-1/2*t*t + t)
sum(f(x$nodes + 1)*x$weights)
sum(f(x$nodes + 0)*x$weights)
f <- function(t) 1/sqrt(2*pi)*exp(-1/2*t*t + t)
sum(f(x$nodes + 1)*x$weights)
1-sum(f(x$nodes + 1)*x$weights)
f <- function(t) 1/sqrt(2*pi)*exp(-1/2*t*t)
sum(f(x$nodes + 1)*x$weights)
f <- function(t) 1/sqrt(2*pi)*exp(-1/2*t*t + t)
sum(f(x$nodes + 1)*x$weights)
exp(1)*sum(f(x$nodes + 1)*x$weights)
exp(-1)*sum(f(x$nodes + 1)*x$weights)
exp(1)*sum(f(x$nodes - 1)*x$weights)
sum(f(x$nodes - 1)*x$weights)
x$nodes
f(50)
f(0)
f(x$nodes+1)
x$weights
sum(dnorm(x$nodes)*x$weights)
sum(x$nodes*x$weights)
x <- gauss.quad(20, "laguerre", alpha=0)
sum(x$nodes*x$weights)
sum(dnorm(x$nodes)*x$weights)
sum(f(x$nodes)*x$weights)
sum(f(x$nodes-1)*x$weights)
sum(f(x$nodes+1)*x$weights)
sum(f(x$nodes+2)*x$weights)
1-sum(f(x$nodes+2)*x$weights)
pnorm(1)
1-sum(f(x$nodes+4)*x$weights)
1-sum(f(x$nodes+5)*x$weights)
1-sum(f(x$nodes+4)*x$weights)
pnorm(2)
1-pnorm(2)
sum(f(x$nodes)*x$weights)
sum(f(x$nodes+1)*x$weights)
sum(f(x$nodes-1)*x$weights)
?gauss.quad.prob
f <- function(t) 1/sqrt(2*pi)*exp(-1/2*t*t + t)*(-t+1)
sum(f(x$nodes+1)*x$weights)
1+sum(f(x$nodes+1)*x$weights)
sum(f(x$nodes-1)*x$weights)
sum(f(x$nodes+2)*x$weights)
sum(f(x$nodes+0)*x$weights)
f <- function(t) 1/sqrt(2*pi)*exp(-1/2*t*t)
sum(f(x$nodes+2)*x$weights)
sum(f(x$nodes)*x$weights)
f <- function(t) 1/sqrt(2*pi)*exp(-1/2*t*t)
sum(f(x$nodes)*x$weights)
x <- gauss.quad(20, "laguerre", alpha=0)
f <- function(t) 1/sqrt(2*pi)*exp(-1/2*t*t)
sum(f(x$nodes)*x$weights)
sum(f(x$nodes + 0)*x$weights)
source('~/.active-rstudio-document', echo=TRUE)
1-0.18
pnorm(1)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
f <- function(t) 1/sqrt(2*pi)*exp(-1/2*t*t)
int.norm(f, x, 1, -1)
int.norm(f, x, 1, 1)
int.norm(f, x, 0, -1)
int.norm(f, x, 0, 0)
int.norm(f, x, 0, 1)
f <- function(t) 1/sqrt(2*pi)*exp(-1/2*t*t + t)
int.norm(f, x, 1, -1)
int.norm(f, x, 0, -1)
int.norm(f, x, 0, 1)
int.norm(f, x, -1, 1)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
x <- gauss.quad(100, kind="laguerre", alpha=0)
f <- function(t) 1/sqrt(2*pi)*exp(-1/2*t*t + t)
int.norm(f, x)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
GaussLaguerre(f,10,0,1)
GaussLaguerre(f,10,1,1)
GaussLaguerre(f,10,-1,1)
install.packages("gaussquad")
library("gaussquad", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
x=laguerre.quadrature.rule(10)
x=laguerre.quadrature.rules(10)
x
y=laguerre.quadrature.rules(f,x)
x
y=laguerre.quadrature.rules(f,x)
y=laguerre.quadrature(f,x)
x
y=laguerre.quadrature(f,x[[10]])
y
y=laguerre.quadrature(f,x[[10]],-1)
y
y=laguerre.quadrature(dnorm,x[[10]],-1)
y
y=laguerre.quadrature(dnorm,x[[10]],-1, weighted=F)
y
y=laguerre.quadrature(dnorm,x[[10]],-1)
y
GaussLaguerre(f, 10, 0, 1)
GaussLaguerre(f, 10, -1, 1)
GaussLaguerre(f, 10, 1, 1)
GaussLaguerre(f, 10, 1, -1)
GaussLaguerre(f, 10, -1, -1)
1-GaussLaguerre(f, 10, -1, -1)
1+GaussLaguerre(f, 10, -1, -1)
pnorm(1)
GaussLaguerre(f, 10, -1, -1)
1-GaussLaguerre(f, 10, -1, -1)
1+GaussLaguerre(f, 10, -1, -1)
1+GaussLaguerre(f, 10, -2, -1)
1+GaussLaguerre(f, 10, -3, -1)
pnorm(3)
pnorm(2)
1+GaussLaguerre(f, 100, -3, -1)
1+GaussLaguerre(f, 1000, -3, -1)
1+GaussLaguerre(f, 1000, -3, 1)
1+GaussLaguerre(f, 1000, -3, -1)
1+GaussLaguerre(f, 1000, 0, -1)
GaussLaguerre(f, 1000, 0, -1)
GaussLaguerre(f, 10, 0, -1)
GaussLaguerre(f, 10, 0, 1)
GaussLaguerre(f, 10, 2, 1)
1-GaussLaguerre(f, 10, 2, 1)
pnorm(2)
1-GaussLaguerre(f, 100, 2, 1)
1-GaussLaguerre(f, 1000, 2, 1)
1-GaussLaguerre(f, 100, 2, 1)
1-GaussLaguerre(f, 100, 3, 1)
pnorm(3)
pnorm(0.5)
1-GaussLaguerre(f, 100, 0.5, 1)
1-GaussLaguerre(f, 100, 0.5, -1)
1-GaussLaguerre(f, 100, -0.5, -1)
1-GaussLaguerre(f, 100, -1, -1)
1+GaussLaguerre(f, 100, -1, -1)
1+GaussLaguerre(f, 100, -3, -1)
1+GaussLaguerre(f, 100, -4, -1)
1+GaussLaguerre(f, 100, -.5, -1)
pnorm(0.5)
1+GaussLaguerre(f, 100, -.5, -1)
1+GaussLaguerre(f, 100, -1, -1)
1-GaussLaguerre(f, 100, 1, 1)
pi
1+GaussLaguerre(f, 100, 0, -1)
1-GaussLaguerre(f, 100, 1, 1)
GaussLaguerre(f, 100, 1, 1)
GaussLaguerre(f, 100, -1, 1)
GaussLaguerre(f, 100, 1, -1)
1+GaussLaguerre(f, 10, -1, 1)
GaussLaguerre(f, 10, -1, 1)
plot(exp(-1/2*t*t +t))
plot(function(t) exp(-1/2*t*t + t))
plot(function(t) exp(-1/2*t*t))
plot(function(t) exp(-1/2*t*t))
plot(function(t) exp(-1/2*t*t + t))
plot(function(t) exp(-1/2*t*t + t), xlim=1:10)
plot(function(t) exp(-1/2*t*t + t), xlim=0:10)
plot(function(t) exp(-1/2*t*t + t), xlim=c(0,10))
?exp
plot(function(t) exp(-1/2*(t*t) + t), xlim=c(0,10))
GaussLaguerre(f, 10, -1, 1)
1+GaussLaguerre(f,10,-.5,1)
GaussLaguerre(f,10,-.5,1)
pnorm(1)
GaussLaguerre(f,10,-1,1)
1+GaussLaguerre(f, 10, -1, -1)
GaussLaguerre(f, 10, -1, -1)
GaussLaguerre(f, 10, -2, -1)
pnorm(2)
GaussLaguerre(f, 10, -3, -1)
GaussLaguerre(f, 100, -3, -1)
GaussLaguerre(f, 100, -3, -1)
g <- function(x) 1/x
GaussLaguerre(g, 10, 0, 1)
g <- function(x) 1/x*exp(x)
GaussLaguerre(g, 10, 0, 1)
g <- function(x) 1/2^x*exp(x)
GaussLaguerre(g, 10, 0, 1)
g <- function(x, eta=0.8, a=-2, b=-1, lambda=0.05)
eta*((eta-1)/eta)^(eta-1)*(a+b*exp(-lambda*x))
GaussLaguerre(g, 10, 0, 0.05)
g(1)
g(0)
g <- function(x, eta=0.8, a=2, b=-1, lambda=0.05) {
eta*((eta-1)/eta)^(eta-1)*(a+b*exp(-lambda*x))
}
g(0)
g(1)
g(10)
eta=0.8
a=2
b=-1
lambda=0.05
eta*((eta-1)/eta)^(eta-1)*(a + b*exp(-lambda*x))
eta*((eta-1)/eta)^(eta-1)*(a + b*exp(-lambda*1))
(a + b*exp(-lambda*1))
eta
eta*((eta-1)/eta)
eta*((eta-1)/eta)^(1-eta)
((eta-1)/eta)^(1-eta)
1-eta
((eta-1)/eta)^(eta-1)
2^eta
2^(eta-1)
(eta-1)/eta
((eta-1)/eta)^2
((eta-1)/eta)^(0.2)
((eta-1)/eta)^(0.1)
((eta-1)/eta)^(0.5)
g <- function(t,lambda,eta) eta*((eta-1)/eta)^(eta-1)*(2-exp(-lambda*t))^(1-eta)
g(0,0,05,0,8)
g(0,0.05,0,8)
g(0,0.05,0.8)
(-0.25+0i)^0.2
(-0.25+0i)^(-0.2)
f <- function(t) 1/sqrt(2*pi)*exp(-1/2*(t*t + t))
fk <- function(k, alpha=0.3, beta=0.9)
-(1+k) + beta*k^alpha*alpha*k^(alpha-1)
fk(1)
fk(0.4)
fk <- function(k, alpha=0.3, beta=0.9)
alpha*beta*k^(2*alpha-1) + k - 1
fk(1)
fk(0)
fk(0.2)
uniroot(fk, c(0.2,1))
fk <- function(k, alpha=0.3, beta=0.9, gamma=2)
alpha*beta*k^(alpha*(1-gamma)-1)-  (1 - k)^(-gamma)
uniroot(fk, c(0.2,1))
f <- function(t,lambda,eta)
eta*((eta-1)/eta)^(eta-1)*(2-exp(-lambda*t))^(1-eta)
para <- list(lambda=c(.05,.05,.2), r=c(.05,.1,.05))
ans <- sapply(1:3, function(i) GaussLaguerre(f,100,0,para[[2]][i], + lambda=para[[1]][i],eta=1.2))
ans <- matrix(ans,nrow=1)
n <- c(4,5,10,15,20)
for (j in 1:5) {
ans2 <- sapply(1:3, function(i) GaussLaguerre(f,n[j],0,para[[2]][i],
lambda=para[[1]][i],eta=1.2))
}
f <- function(t,lambda,eta)
eta*((eta-1)/eta)^(eta-1)*(2-exp(-lambda*t))^(1-eta)
para <- list(lambda=c(.05,.05,.2), r=c(.05,.1,.05))
ans <- sapply(1:3, function(i) GaussLaguerre(f,100,0,para[[2]][i], lambda=para[[1]][i],eta=1.2))
ans <- matrix(ans,nrow=1)
n <- c(4,5,10,15,20)
for (j in 1:5) {
ans2 <- sapply(1:3, function(i) GaussLaguerre(f,n[j],0,para[[2]][i],
lambda=para[[1]][i],eta=1.2))
}
ans
f(2,lambda=0.05,eta=0.8)
uniroot(fk, c(0.2,1))
library("reshape2", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
?melt
?integrate
integrate(function(x) x^2, 1, 2)
integrate(function(x) (x+1)^2, 0, 1)
integrate(dnorm, 1, 2)
1+GaussLaguerre(f, 10, -1, -1)
1+GaussLaguerre(f, 10, -1, -1)
f <- function(t) 1/sqrt(2*pi)*exp(-1/2*(t*t + t))
# Matches pnorm(1)
1+GaussLaguerre(f, 10, -1, -1)
GaussLaguerre(f, 10, -1, -1)
integrate(function(x) dnorm(x-1), 0, 1)
integrate(function(x) dnorm(x+1), 0, 1)
1+GaussLaguerre(f, 10, -1, -1)
1+GaussLaguerre(f, 10, -1, 1)
1+GaussLaguerre(f, 10, 1, -1)
integrate(dnorm,0,Inf)
integrate(dnorm,1,Inf)
integrate(function(x) dnorm(x+1), 0, Inf)
integrate(function(x) dnorm(x+2), 0, Inf)
integrate(dnorm,2,Inf)
GaussLaguerre(f, 10, 0, 1)
f <- function(t) 1/sqrt(2*pi)*exp(-1/2*(t*t + t))
GaussLaguerre <- function(f, n, a, r, ...) {
res <- gauss.quad(n, kind = "laguerre")
x <- res$nodes/r - a
w <- res$weights
y <- w * f(x, ...) * exp(-r * a)/r
sum(y)
}
GaussLaguerre(f, 10, 0, 1)
GaussLaguerre(f, 10, 0, -1)
GaussLaguerre(f, 10, 1, 1)
pnorm(1)
GaussLaguerre(f, 10, -1, -1)
GaussLaguerre(f, 10, -1, 1)
GaussLaguerre(f, 10, 1, -1)
rm(list=ls())
pnorm(0)
1-pnorm(1)
integrate(function(x) dnorm(x+1), 0, Inf)
1-pnorm(2)
GaussLaguerre(f, 10, 0, 1)
GaussLaguerre <- function(f, n, a, r, ...) {
res <- gauss.quad(n, kind = "laguerre")
x <- res$nodes/r - a
w <- res$weights
y <- w * f(x, ...) * exp(-r * a)/r
sum(y)
}
f <- function(t) 1/sqrt(2*pi)*exp(-1/2*(t*t + t))
GaussLaguerre(f, 10, 0, 1)
GaussLaguerre(f, 10, 0, -1)
f <- function(t) 1/sqrt(2*pi)*exp(-1/2*(t*t) + t)
GaussLaguerre(f, 10, 0, -1)
1-pnorm(1)
GaussLaguerre(f, 10, 0, 1)
GaussLaguerre(f, 10, 1, 1)
1-pnorm(1)
integrate(function(x) dnorm(x+1), 0, Inf)
GaussLaguerre(f, 100, 1, 1)
f <- function(t) 1/sqrt(2*pi)*exp(-1/2*(t*t) )*exp(t)
GaussLaguerre(f, 10, 0, 1)
GaussLaguerre(f, 100, 1, 1)
GaussLaguerre(f, 100, -1, 1)
GaussLaguerre <- function(f, n, a, r, ...) {
res <- gauss.quad(n, kind = "laguerre")
x <- res$nodes/r + a
w <- res$weights
y <- w * f(x, ...) * exp(-r * a)/r
sum(y)
}
GaussLaguerre(f, 10, 0, 1)
GaussLaguerre(f, 100, -1, 1)
pnorm(!)
pnorm(1)
GaussLaguerre(f, 100, -2, 1)
pnorm(2)
f <- function(t) 1/sqrt(2*pi)*exp(-1/2*(t*t) )*exp(t)
GaussLaguerre(f, 10, 0, 1)
GaussLaguerre(f, 100, -1, 1)
GaussLaguerre(f, 100, -2, 1)
gauss.quad(6, "laguerre")
x=gauss.quad(6, "laguerre")
x$weights %*% f(x$nodes)
exp(1)*x$weights * f(x$nodes-1)
sum(exp(1)*x$weights * f(x$nodes-1))
GaussLaguerre(f, 6, -1, 1)
GaussLaguerre(f, 10, -1, 1)
sqrt(0.013)
sqrt(0.01377)
sqrt(0.013716)
sqrt(0.000014015)
196.44/4
ss <- function(p, gamma=0.5,
theta=0.5, eta=0.5,
delta=0.1, beta=0.97,
alpha=0.4) {
cbar  <- p[1]
kbar <-  p[2]
nbar  <- p[3]
lambdabar <- p[4]
ybar <- p[5]
c(
cbar^(-gamma) - lambdabar,
-theta*(1-nbar)^(-eta) + lambdabar*ybar/nbar,
kbar - ((1-delta)*kbar + alpha*ybar/kbar),
-lambdabar + beta*(lambdabar*((1-delta) + alpha*ybar/kbar)),
ybar - kbar^gamma*nbar^eta
)
}
rslv <- nleqslv(x=c(5,60,.2,.8,60),fn=ss)
library(nleqslv)
rslv <- nleqslv(x=c(5,60,.2,.8,60),fn=ss)
rslv
ss(5,60,.2,.8,60)
ss(5,60,.2,.8,30)
ss(5,10,.2,.8,30)
ss(30,1,.2,.8,1)
ss(1,1,1,1,1)
ss(c(1,1,1,1,1))
ss(c(5,60,.2,.8,60))
1/sqrt(2*pi)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
419*1.13
install.packages("astsa")
install.packages("dse")
source('~/Google Drive/projects/853_Project/2/test/dse_comparison.R', echo=TRUE)
y
length(Y)
length(y)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("astsa")
getAnywhere(Kfilter0)
library(astsa)
getAnywhere(Kfilter0)
source('~/.active-rstudio-document', echo=TRUE)
dev.new()
plot(Time, mu[-1])
lines(ks$xp, col=4)
lines(ks$xf, col=3)
lines(ks$xs, col=2)
abline(v=Time, lty=3, col="lightblue")
names = c("predictor","filter","smoother")
legend("bottomright", names, col=4:2, lty=1, bg="white")
getAnywhere(EM1)
getAnywhere(Ksmooth1)
Kfilter0
Kfilter1
Ksmooth1
EM1
Ksmooth1
Kfilter1
WBT
data(blood)
data
blood
y = cbind(WBC, PLT, HCT)
num = nrow(y)
A = array(0, dim=c(3,3,num))  # creates num 3x3 zero matrices
for(k in 1:num) if (y[k,1] > 0) A[,,k]= diag(1,3)
# Initial values
mu0 = matrix(0,3,1)
Sigma0 = diag(c(.1,.1,1),3)
Phi = diag(1,3)
cQ = diag(c(.1,.1,1),3)
cR = diag(c(.1,.1,1),3)
(em = EM1(num,y,A,mu0,Sigma0,Phi,0,0,cQ,cR,0,100,.001))
# Graph smoother
ks = Ksmooth1(num, y, A, em$mu0, em$Sigma0, em$Phi, 0, 0, chol(em$Q), chol(em$R), 0)
y1s = ks$xs[1,,]
y2s = ks$xs[2,,]
y3s = ks$xs[3,,]
p1 = 2*sqrt(ks$Ps[1,1,])
p2 = 2*sqrt(ks$Ps[2,2,])
p3 = 2*sqrt(ks$Ps[3,3,])
par(mfrow=c(3,1), mar=c(4,4,1,1)+.2)
plot(WBC, type="p", pch=19, ylim=c(1,5), xlab="day")
lines(y1s); lines(y1s+p1, lty=2); lines(y1s-p1, lty=2)
plot(PLT, type="p",  ylim=c(3,6), pch=19, xlab="day")
lines(y2s); lines(y2s+p2, lty=2); lines(y2s-p2, lty=2)
plot(HCT, type="p", pch=19, ylim=c(20,40), xlab="day")
lines(y3s); lines(y3s+p3, lty=2); lines(y3s-p3, lty=2)
y
ifelse(abs(y)>0,0,y+1)
83.5*0.4 + 95*0.5
83.5*0.4 + 95*0.5 + 10
83.5*0.4 + 95*0.5 + 9
87*0.4 + 90*0.5 + 9
200*1500
200*2000
150*2000
147.19/4
-158.288+158.242
-158.242+158.196
-157.968+157.922
35*7*5
35*7*5*4
1+1
`+`(1,2)
+(1,2)
`-`(1.2,4,5,6,8)
-1
setwd("~/Google Drive/School/Masters/FinalPaper/data/drydet-2")
setwd("~/Google Drive/School/Masters/FinalPaper/src")
data <- read.dta("sample.dta")
librarY(foreign)
library(foreign)
data <- read.dta("sample.dta")
unique(data$hh_id)
data[data$hh_id==1100289,]
data[data$hh_id==1100297,]
data[data$hh_id==1100297,]
max(data$purchased)
min(data$purchased)
min(data$purch)
max(data$purch)
